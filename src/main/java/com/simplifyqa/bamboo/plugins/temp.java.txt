package com.simplifyqa.bamboo.plugins;

import com.simplifyqa.bamboo.plugins.impl.ExecutionImpl;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URISyntaxException;
import java.security.KeyManagementException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.util.Properties;
import org.apache.http.HttpResponse;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.conn.ssl.TrustStrategy;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.impl.conn.BasicHttpClientConnectionManager;

public class temp {

  public static HttpResponse makeHttpPostRequest(String url, String payload)
    throws URISyntaxException, IOException, InterruptedException, KeyManagementException, NoSuchAlgorithmException, KeyStoreException {
    int timeout = 5 * 60;
    RequestConfig config = RequestConfig
      .custom()
      .setConnectTimeout(timeout * 1000)
      .setConnectionRequestTimeout(timeout * 1000)
      .setSocketTimeout(timeout * 1000)
      .build();

    BasicHttpClientConnectionManager connectionManager = new BasicHttpClientConnectionManager();

    CloseableHttpClient client = HttpClients
      .custom()
      .setConnectionManager(connectionManager)
      .build();

    HttpPost request = new HttpPost(url);
    StringEntity entity = new StringEntity(payload);
    entity.setContentType("application/json");
    request.setEntity(entity);
    request.setHeader("Content-Type", "application/json");
    request.setHeader("Authorization", ExecutionImpl.getAuthKey());

    return client.execute(request);
  }

  public static Properties readPropertiesFile(String filePath) {
    Properties properties = new Properties();
    try (FileInputStream fis = new FileInputStream(filePath)) {
      properties.load(fis);
    } catch (FileNotFoundException e) {
      e.printStackTrace();
    } catch (IOException e) {
      e.printStackTrace();
    }

    return properties;
  }

  public static void main(String[] args)
    throws URISyntaxException, IOException, InterruptedException, KeyManagementException, NoSuchAlgorithmException, KeyStoreException {
    // Properties prop = temp.readPropertiesFile(
    //   "src/main/resources/properties/plugin.properties"
    // );
    // prop.forEach((key, value) -> System.out.println(key + " : " + value));
    // System.out.println(prop.getProperty("com.simplifyqa.fields.token.nameKey"));
    String url = "https://qa.simplifyqa.app/jenkinsSuiteExecution";
    String payload =
      "{\"token\": \"U2FsdGVkX1/SZh7Ibhl4dNIWTFOED77s8TFv2JUR/VanSl3m6bkKGLZfz/GO9oyFN+vTYMyl/bJ7J3c5p06gvw==\"}";
    HttpResponse resp = temp.makeHttpPostRequest(url, payload);
    System.out.println(resp.toString());
    System.out.println(resp.getStatusLine().getStatusCode());
  }
}
